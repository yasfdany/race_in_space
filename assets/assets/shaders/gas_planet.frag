{
  "sksl": {
    "entrypoint": "gas_planet_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 iResolution;\nuniform float iTime;\nuniform float seed;\nuniform float size;\nuniform float pixels;\nuniform vec4 dustColor;\nuniform vec4 lightColor;\nuniform vec4 midColor;\nuniform vec4 darkColor;\n\nvec4 fragColor;\n\nfloat cloud_cover;\nvec2 light_origin;\nfloat time_speed;\nfloat stretch;\nfloat cloud_curve;\nfloat light_border_1;\nfloat light_border_2;\nfloat rotation;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvec2 FLT_flutter_local_rotate(inout vec2 coord, float angle)\n{\n    coord -= vec2(0.5);\n    coord *= mat2(vec2(vec2(cos(angle), -sin(angle))), vec2(vec2(sin(angle), cos(angle))));\n    return coord + vec2(0.5);\n}\n\nvec2 FLT_flutter_local_spherify(vec2 uv)\n{\n    vec2 centered = (uv * 2.0) - vec2(1.0);\n    float z = sqrt(1.0 - dot(centered, centered));\n    vec2 sphere = centered / vec2(z + 1.0);\n    return (sphere * 0.5) + vec2(0.5);\n}\n\nfloat FLT_flutter_local_rand(inout vec2 coord)\n{\n    coord = mod(coord, vec2(1.0) * floor(size + float(0.5)));\n    return fract((sin(dot(coord, vec2(12.98980045318603515625, 78.233001708984375))) * 15.545299530029296875) * seed);\n}\n\nfloat FLT_flutter_local_circleNoise(inout vec2 uv)\n{\n    float uv_y = floor(uv.y);\n    uv.x += (uv_y * 0.310000002384185791015625);\n    vec2 f = fract(uv);\n    vec2 param = vec2(floor(uv.x), floor(uv_y));\n    float _212 = FLT_flutter_local_rand(param);\n    float h = _212;\n    float m = length((f - vec2(0.25)) - vec2(h * 0.5));\n    float r = h * 0.25;\n    return smoothstep(0.0, r, m * 0.75);\n}\n\nfloat FLT_flutter_local_noise(vec2 coord)\n{\n    vec2 i = floor(coord);\n    vec2 f = fract(coord);\n    vec2 param = i;\n    float _97 = FLT_flutter_local_rand(param);\n    float a = _97;\n    vec2 param_1 = i + vec2(1.0, 0.0);\n    float _104 = FLT_flutter_local_rand(param_1);\n    float b = _104;\n    vec2 param_2 = i + vec2(0.0, 1.0);\n    float _110 = FLT_flutter_local_rand(param_2);\n    float c = _110;\n    vec2 param_3 = i + vec2(1.0);\n    float _115 = FLT_flutter_local_rand(param_3);\n    float d = _115;\n    vec2 cubic = (f * f) * (vec2(3.0) - (f * 2.0));\n    return (mix(a, b, cubic.x) + (((c - a) * cubic.y) * (1.0 - cubic.x))) + (((d - b) * cubic.x) * cubic.y);\n}\n\nfloat FLT_flutter_local_fbm(inout vec2 coord)\n{\n    float value = 0.0;\n    float scale = 0.5;\n    for (int i = 0; i < 2; i++)\n    {\n        vec2 param = coord;\n        value += (FLT_flutter_local_noise(param) * scale);\n        coord *= 2.0;\n        scale *= 0.5;\n    }\n    return value;\n}\n\nfloat FLT_flutter_local_cloud_alpha(vec2 uv)\n{\n    float c_noise = 0.0;\n    for (int i = 0; i < 9; i++)\n    {\n        vec2 param = (((uv * size) * 0.300000011920928955078125) + vec2(float(i + 1) + 10.0)) + vec2(iTime * time_speed, 0.0);\n        float _262 = FLT_flutter_local_circleNoise(param);\n        c_noise += _262;\n    }\n    vec2 param_1 = ((uv * size) + vec2(c_noise)) + vec2(iTime * time_speed, 0.0);\n    float _280 = FLT_flutter_local_fbm(param_1);\n    float fbm = _280;\n    return fbm;\n}\n\nvoid FLT_main()\n{\n    cloud_cover = 0.5;\n    light_origin = vec2(0.4000000059604644775390625, 0.60000002384185791015625);\n    time_speed = 0.20000000298023223876953125;\n    stretch = 1.0;\n    cloud_curve = 1.0;\n    light_border_1 = 0.4199999868869781494140625;\n    light_border_2 = 0.62000000476837158203125;\n    rotation = 9.0;\n    vec4 colors[4];\n    colors[0] = dustColor;\n    colors[1] = lightColor;\n    colors[2] = midColor;\n    colors[3] = darkColor;\n    vec2 uv_1 = FLT_flutter_local_FlutterFragCoord() / iResolution;\n    uv_1.x *= (iResolution.x / iResolution.y);\n    uv_1.y = 1.0 - uv_1.y;\n    uv_1 = floor(uv_1 * pixels) / vec2(pixels);\n    vec2 light_origin_1 = vec2(0.4000000059604644775390625, 0.60000002384185791015625);\n    float d_light = distance(uv_1, light_origin_1);\n    float d_circle = distance(uv_1, vec2(0.5));\n    float circle_alpha = step(d_circle, 0.5);\n    if (circle_alpha <= 0.0)\n    {\n        fragColor = vec4(0.0);\n        return;\n    }\n    vec2 param_2 = uv_1;\n    float param_3 = rotation;\n    vec2 _406 = FLT_flutter_local_rotate(param_2, param_3);\n    uv_1 = _406;\n    vec2 param_4 = uv_1;\n    uv_1 = FLT_flutter_local_spherify(param_4);\n    uv_1.y += smoothstep(0.0, cloud_curve, abs(uv_1.x - 0.4000000059604644775390625));\n    vec2 param_5 = uv_1 * vec2(1.0, stretch);\n    float c = FLT_flutter_local_cloud_alpha(param_5);\n    vec4 col = colors[0];\n    if (c < (cloud_cover + 0.02999999932944774627685546875))\n    {\n        col = colors[1];\n    }\n    if ((d_light + (c * 0.300000011920928955078125)) > light_border_1)\n    {\n        col = colors[2];\n    }\n    if ((d_light + (c * 0.300000011920928955078125)) > light_border_2)\n    {\n        col = colors[3];\n    }\n    float cloud_alpha = step(cloud_cover - 0.0500000007450580596923828125, c);\n    float final_alpha = max(circle_alpha, cloud_alpha);\n    fragColor = vec4((col.xyz * final_alpha) * 1.2000000476837158203125, final_alpha);\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "iResolution",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "iTime",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 2,
        "name": "seed",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 3,
        "name": "size",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 4,
        "name": "pixels",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 5,
        "name": "dustColor",
        "rows": 4,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 6,
        "name": "lightColor",
        "rows": 4,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 7,
        "name": "midColor",
        "rows": 4,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 8,
        "name": "darkColor",
        "rows": 4,
        "type": 10
      }
    ]
  }
}