{
  "sksl": {
    "entrypoint": "gravity_bubble_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 iResolution;\nuniform float iTime;\nuniform vec4 color1;\nuniform vec4 color2;\nuniform vec4 color3;\n\nvec4 fragColor;\n\nvec3 BG_COLOR;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvec3 FLT_flutter_local_hash33(inout vec3 p3)\n{\n    p3 = fract(p3 * vec3(0.103100001811981201171875, 0.113689996302127838134765625, 0.13786999881267547607421875));\n    p3 += vec3(dot(p3, p3.yxz + vec3(19.1900005340576171875)));\n    return vec3(-1.0) + (fract(vec3(p3.x + p3.y, p3.x + p3.z, p3.y + p3.z) * p3.zyx) * 2.0);\n}\n\nfloat FLT_flutter_local_snoise3(vec3 p)\n{\n    vec3 i = floor(p + vec3(((p.x + p.y) + p.z) * 0.3333333432674407958984375));\n    vec3 d0 = p - (i - vec3(((i.x + i.y) + i.z) * 0.16666667163372039794921875));\n    vec3 e = step(vec3(0.0), d0 - d0.yzx);\n    vec3 i1 = e * (vec3(1.0) - e.zxy);\n    vec3 i2 = vec3(1.0) - (e.zxy * (vec3(1.0) - e));\n    vec3 d1 = d0 - (i1 - vec3(0.16666667163372039794921875));\n    vec3 d2 = d0 - (i2 - vec3(0.3333333432674407958984375));\n    vec3 d3 = d0 - vec3(0.5);\n    vec4 h = max(vec4(0.60000002384185791015625) - vec4(dot(d0, d0), dot(d1, d1), dot(d2, d2), dot(d3, d3)), vec4(0.0));\n    vec3 param = i;\n    vec3 _215 = FLT_flutter_local_hash33(param);\n    vec3 param_1 = i + i1;\n    vec3 _222 = FLT_flutter_local_hash33(param_1);\n    vec3 param_2 = i + i2;\n    vec3 _229 = FLT_flutter_local_hash33(param_2);\n    vec3 param_3 = i + vec3(1.0);\n    vec3 _236 = FLT_flutter_local_hash33(param_3);\n    vec4 n = (((h * h) * h) * h) * vec4(dot(d0, _215), dot(d1, _222), dot(d2, _229), dot(d3, _236));\n    return dot(vec4(31.3159999847412109375), n);\n}\n\nfloat FLT_flutter_local_light1(float intensity, float attenuation, float dist)\n{\n    return intensity / (1.0 + (dist * attenuation));\n}\n\nfloat FLT_flutter_local_light2(float intensity, float attenuation, float dist)\n{\n    return intensity / (1.0 + ((dist * dist) * attenuation));\n}\n\nvec4 FLT_flutter_local_extractAlpha(vec4 colorIn)\n{\n    float maxValue = min(max(max(colorIn.x, colorIn.y), colorIn.z), 1.0);\n    vec4 colorOut;\n    if (maxValue > 9.9999997473787516355514526367188e-06)\n    {\n        vec3 _267 = colorIn.xyz * (1.0 / maxValue);\n        colorOut.x = _267.x;\n        colorOut.y = _267.y;\n        colorOut.z = _267.z;\n        colorOut.w = maxValue;\n    }\n    else\n    {\n        colorOut = vec4(0.0);\n    }\n    return colorOut;\n}\n\nvoid FLT_flutter_local_draw(out vec4 _FragColor, vec2 vUv)\n{\n    vec2 uv = vUv;\n    float ang = atan(uv.y, uv.x);\n    float len = length(uv);\n    vec3 param = vec3(uv * 0.64999997615814208984375, iTime * 0.5);\n    float n0 = (FLT_flutter_local_snoise3(param) * 0.5) + 0.5;\n    float r0 = mix(0.7599999904632568359375, 0.839999973773956298828125, n0);\n    float d0 = distance(uv, uv * (r0 / len));\n    float param_1 = 1.0;\n    float param_2 = 100.0;\n    float param_3 = d0;\n    float v0 = FLT_flutter_local_light1(param_1, param_2, param_3);\n    v0 *= smoothstep(r0 * 1.0499999523162841796875, r0, len);\n    float cl = (cos(ang + (iTime * 2.0)) * 0.5) + 0.5;\n    float a = iTime * (-1.0);\n    vec2 pos = vec2(cos(a), sin(a)) * r0;\n    float d = distance(uv, pos);\n    float param_4 = 1.5;\n    float param_5 = 5.0;\n    float param_6 = d;\n    float v1 = FLT_flutter_local_light2(param_4, param_5, param_6);\n    float param_7 = 1.0;\n    float param_8 = 100.0;\n    float param_9 = d0;\n    v1 *= FLT_flutter_local_light1(param_7, param_8, param_9);\n    float v2 = smoothstep(1.0, mix(0.60000002384185791015625, 1.0, n0 * 0.5), len);\n    float v3 = smoothstep(0.60000002384185791015625, 0.800000011920928955078125, len);\n    vec4 c = mix(color1, color2, vec4(cl));\n    vec4 col = mix(color1, color2, vec4(cl));\n    col = mix(color3, col, vec4(v0));\n    col = ((col + vec4(v1)) * v2) * v3;\n    vec4 _429 = col;\n    vec3 _433 = clamp(_429.xyz, vec3(0.0), vec3(1.0));\n    col.x = _433.x;\n    col.y = _433.y;\n    col.z = _433.z;\n    vec4 param_10 = col;\n    _FragColor = FLT_flutter_local_extractAlpha(param_10);\n}\n\nvoid FLT_main()\n{\n    BG_COLOR = (vec3((sin(iTime) * 0.5) + 0.5) * 0.0) + vec3(0.0);\n    vec2 pixelCoord = FLT_flutter_local_FlutterFragCoord();\n    vec2 uv_1 = ((pixelCoord * 2.0) - iResolution) / vec2(iResolution.x);\n    vec2 param_12 = uv_1;\n    vec4 param_11;\n    FLT_flutter_local_draw(param_11, param_12);\n    vec4 col_1 = param_11;\n    vec3 bg = BG_COLOR;\n    vec3 _472 = mix(bg, col_1.xyz, vec3(col_1.w));\n    fragColor.x = _472.x;\n    fragColor.y = _472.y;\n    fragColor.z = _472.z;\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "iResolution",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "iTime",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 2,
        "name": "color1",
        "rows": 4,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 3,
        "name": "color2",
        "rows": 4,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 4,
        "name": "color3",
        "rows": 4,
        "type": 10
      }
    ]
  }
}