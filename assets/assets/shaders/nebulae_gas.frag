{
  "sksl": {
    "entrypoint": "nebulae_gas_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 iResolution;\nuniform float iTime;\nuniform float seed;\nuniform float size;\nuniform float pixels;\nuniform vec4 dark;\nuniform vec4 light;\n\nvec4 fragColor;\n\nfloat should_tile;\nfloat reduce_background;\nvec2 uv_correct;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nbool FLT_flutter_local_dither(vec2 uv1, vec2 uv2)\n{\n    return mod(uv1.y + uv2.x, 2.0 / pixels) <= (1.0 / pixels);\n}\n\nfloat FLT_flutter_local_rand(inout vec2 coord, float tile_size)\n{\n    if (should_tile == 1.0)\n    {\n        coord = mod(coord / uv_correct, vec2(tile_size));\n    }\n    return fract(sin(dot(coord, vec2(12.98980045318603515625, 78.233001708984375))) * (15.545299530029296875 + seed));\n}\n\nfloat FLT_flutter_local_noise(vec2 coord, float tile_size)\n{\n    vec2 i = floor(coord);\n    vec2 f = fract(coord);\n    vec2 param = i;\n    float param_1 = tile_size;\n    float _107 = FLT_flutter_local_rand(param, param_1);\n    float a = _107;\n    vec2 param_2 = i + vec2(1.0, 0.0);\n    float param_3 = tile_size;\n    float _115 = FLT_flutter_local_rand(param_2, param_3);\n    float b = _115;\n    vec2 param_4 = i + vec2(0.0, 1.0);\n    float param_5 = tile_size;\n    float _123 = FLT_flutter_local_rand(param_4, param_5);\n    float c = _123;\n    vec2 param_6 = i + vec2(1.0);\n    float param_7 = tile_size;\n    float _130 = FLT_flutter_local_rand(param_6, param_7);\n    float d = _130;\n    vec2 cubic = (f * f) * (vec2(3.0) - (f * 2.0));\n    return (mix(a, b, cubic.x) + (((c - a) * cubic.y) * (1.0 - cubic.x))) + (((d - b) * cubic.x) * cubic.y);\n}\n\nfloat FLT_flutter_local_fbm(inout vec2 coord, float tile_size)\n{\n    float value = 0.0;\n    float scale = 0.5;\n    for (int i = 0; i < 5; i++)\n    {\n        vec2 param = coord;\n        float param_1 = tile_size;\n        value += (FLT_flutter_local_noise(param, param_1) * scale);\n        coord *= 2.0;\n        scale *= 0.5;\n    }\n    return value;\n}\n\nfloat FLT_flutter_local_circleNoise(inout vec2 uv, float tile_size)\n{\n    if (should_tile == 1.0)\n    {\n        uv = mod(uv, vec2(tile_size));\n    }\n    float uv_y = floor(uv.y);\n    uv.x += (uv_y * 0.310000002384185791015625);\n    vec2 f = fract(uv);\n    vec2 param = vec2(floor(uv.x), floor(uv_y));\n    float param_1 = tile_size;\n    float _253 = FLT_flutter_local_rand(param, param_1);\n    float h = _253;\n    float m = length((f - vec2(0.25)) - vec2(h * 0.5));\n    float r = h * 0.25;\n    return smoothstep(0.0, r, m * 0.75);\n}\n\nfloat FLT_flutter_local_cloud_alpha(vec2 uv, float tile_size)\n{\n    float c_noise = 0.0;\n    for (int i = 0; i < 2; i++)\n    {\n        vec2 param = ((uv * 0.5) + vec2(float(i + 1))) + vec2(-0.300000011920928955078125, 0.0);\n        float param_1 = ceil(tile_size * 0.5);\n        float _299 = FLT_flutter_local_circleNoise(param, param_1);\n        c_noise += _299;\n    }\n    vec2 param_2 = uv + vec2(c_noise);\n    float param_3 = tile_size;\n    float _312 = FLT_flutter_local_fbm(param_2, param_3);\n    float fbm = _312;\n    return fbm;\n}\n\nvec4 FLT_flutter_local_colorscheme(float x)\n{\n    return mix(dark, light, vec4(x));\n}\n\nvoid FLT_main()\n{\n    should_tile = 1.0;\n    reduce_background = 0.0;\n    uv_correct = vec2(1.0);\n    vec2 uv = FLT_flutter_local_FlutterFragCoord() / iResolution;\n    uv.x *= (iResolution.x / iResolution.y);\n    uv.y = 1.0 - uv.y;\n    vec2 pixelUV = (floor(uv * pixels) / vec2(pixels)) * uv_correct;\n    vec2 param = pixelUV;\n    vec2 param_1 = uv;\n    bool dith = FLT_flutter_local_dither(param, param_1);\n    vec2 param_2 = (pixelUV * ceil(size * 0.5)) + vec2(2.0);\n    float param_3 = ceil(size * 0.5);\n    float _366 = FLT_flutter_local_fbm(param_2, param_3);\n    float n_alpha = _366;\n    vec2 param_4 = (pixelUV * size) + vec2(iTime * 0.100000001490116119384765625);\n    float param_5 = size;\n    float n_dust = FLT_flutter_local_cloud_alpha(param_4, param_5);\n    vec2 param_6 = (pixelUV * ceil(size * 0.20000000298023223876953125)) - vec2(2.0);\n    float param_7 = ceil(size * 0.20000000298023223876953125);\n    float _394 = FLT_flutter_local_fbm(param_6, param_7);\n    float n_dust2 = _394;\n    float n_dust_lerp = n_dust2 * n_dust;\n    if (dith)\n    {\n        n_dust_lerp *= 0.949999988079071044921875;\n    }\n    float a_dust = smoothstep(0.300000011920928955078125, 0.699999988079071044921875, n_dust_lerp * 1.7999999523162841796875);\n    n_dust_lerp = pow(n_dust_lerp, 3.2000000476837158203125) * 56.0;\n    if (dith)\n    {\n        n_dust_lerp *= 1.10000002384185791015625;\n    }\n    if (reduce_background == 1.0)\n    {\n        n_dust_lerp = pow(n_dust_lerp, 0.800000011920928955078125) * 0.699999988079071044921875;\n    }\n    float col_value = floor(n_dust_lerp) / 7.0;\n    float param_8 = col_value;\n    vec4 col = FLT_flutter_local_colorscheme(param_8);\n    fragColor = vec4(col.xyz, a_dust);\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "iResolution",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "iTime",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 2,
        "name": "seed",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 3,
        "name": "size",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 4,
        "name": "pixels",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 5,
        "name": "dark",
        "rows": 4,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 6,
        "name": "light",
        "rows": 4,
        "type": 10
      }
    ]
  }
}